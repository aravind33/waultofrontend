{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/aravind33/Visual-studio/Project 1/concurrent (1)/backend/frontend/components/DisqusThread.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport { DISQUS_SHORTNAME, DOMAIN } from '../config';\nvar SHORTNAME = DISQUS_SHORTNAME;\nvar WEBSITE_URL = DOMAIN;\n\nfunction renderDisqus() {\n  if (window.DISQUS === undefined) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = 'https://' + SHORTNAME + '.disqus.com/embed.js';\n    document.getElementsByTagName('head')[0].appendChild(script);\n  } else {\n    window.DISQUS.reset({\n      reload: true\n    });\n  }\n}\n\nvar DisqusThread = /*#__PURE__*/function (_React$Component) {\n  _inherits(DisqusThread, _React$Component);\n\n  var _super = _createSuper(DisqusThread);\n\n  function DisqusThread() {\n    _classCallCheck(this, DisqusThread);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DisqusThread, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.id !== nextProps.id || this.props.title !== nextProps.title || this.props.path !== nextProps.path;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      renderDisqus();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      renderDisqus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          title = _this$props.title,\n          path = _this$props.path,\n          other = _objectWithoutProperties(_this$props, [\"id\", \"title\", \"path\"]);\n\n      if (process.env.BROWSER) {\n        window.disqus_shortname = SHORTNAME;\n        window.disqus_identifier = id;\n        window.disqus_title = title;\n        window.disqus_url = WEBSITE_URL + path;\n      }\n\n      return __jsx(\"div\", _extends({}, other, {\n        id: \"disqus_thread\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return DisqusThread;\n}(React.Component);\n\n_defineProperty(DisqusThread, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired\n});\n\nexport default DisqusThread;","map":{"version":3,"sources":["/home/aravind33/Visual-studio/Project 1/concurrent (1)/backend/frontend/components/DisqusThread.js"],"names":["PropTypes","DISQUS_SHORTNAME","DOMAIN","SHORTNAME","WEBSITE_URL","renderDisqus","window","DISQUS","undefined","script","document","createElement","async","src","getElementsByTagName","appendChild","reset","reload","DisqusThread","nextProps","props","id","title","path","other","process","env","BROWSER","disqus_shortname","disqus_identifier","disqus_title","disqus_url","React","Component","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAAQC,gBAAR,EAA0BC,MAA1B,QAAuC,WAAvC;AAEA,IAAMC,SAAS,GAAGF,gBAAlB;AACA,IAAMG,WAAW,GAAGF,MAApB;;AAEA,SAASG,YAAT,GAAwB;AACtB,MAAIC,MAAM,CAACC,MAAP,KAAkBC,SAAtB,EAAiC;AAC/B,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,KAAP,GAAe,IAAf;AACAH,IAAAA,MAAM,CAACI,GAAP,GAAa,aAAaV,SAAb,GAAyB,sBAAtC;AACAO,IAAAA,QAAQ,CAACI,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDN,MAArD;AACD,GALD,MAKO;AACLH,IAAAA,MAAM,CAACC,MAAP,CAAcS,KAAd,CAAoB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAApB;AACD;AACF;;IAEKC,Y;;;;;;;;;;;;;0CAOkBC,S,EAAW;AAC/B,aACE,KAAKC,KAAL,CAAWC,EAAX,KAAkBF,SAAS,CAACE,EAA5B,IACA,KAAKD,KAAL,CAAWE,KAAX,KAAqBH,SAAS,CAACG,KAD/B,IAEA,KAAKF,KAAL,CAAWG,IAAX,KAAoBJ,SAAS,CAACI,IAHhC;AAKD;;;wCAEmB;AAClBlB,MAAAA,YAAY;AACb;;;yCAEoB;AACnBA,MAAAA,YAAY;AACb;;;6BAEQ;AAAA,wBAC6B,KAAKe,KADlC;AAAA,UACDC,EADC,eACDA,EADC;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,IADV,eACUA,IADV;AAAA,UACmBC,KADnB;;AAGP,UAAIC,OAAO,CAACC,GAAR,CAAYC,OAAhB,EAAyB;AACvBrB,QAAAA,MAAM,CAACsB,gBAAP,GAA0BzB,SAA1B;AACAG,QAAAA,MAAM,CAACuB,iBAAP,GAA2BR,EAA3B;AACAf,QAAAA,MAAM,CAACwB,YAAP,GAAsBR,KAAtB;AACAhB,QAAAA,MAAM,CAACyB,UAAP,GAAoB3B,WAAW,GAAGmB,IAAlC;AACD;;AAED,aAAO,0BAASC,KAAT;AAAgB,QAAA,EAAE,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAlCwBQ,KAAK,CAACC,S;;gBAA3Bf,Y,eACe;AACjBG,EAAAA,EAAE,EAAErB,SAAS,CAACkC,MAAV,CAAiBC,UADJ;AAEjBb,EAAAA,KAAK,EAAEtB,SAAS,CAACkC,MAAV,CAAiBC,UAFP;AAGjBZ,EAAAA,IAAI,EAAEvB,SAAS,CAACkC,MAAV,CAAiBC;AAHN,C;;AAoCrB,eAAejB,YAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport {DISQUS_SHORTNAME, DOMAIN} from '../config'\n\nconst SHORTNAME = DISQUS_SHORTNAME;\nconst WEBSITE_URL = DOMAIN;\n\nfunction renderDisqus() {\n  if (window.DISQUS === undefined) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = 'https://' + SHORTNAME + '.disqus.com/embed.js';\n    document.getElementsByTagName('head')[0].appendChild(script);\n  } else {\n    window.DISQUS.reset({ reload: true });\n  }\n}\n\nclass DisqusThread extends React.Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.id !== nextProps.id ||\n      this.props.title !== nextProps.title ||\n      this.props.path !== nextProps.path\n    );\n  }\n\n  componentDidMount() {\n    renderDisqus();\n  }\n\n  componentDidUpdate() {\n    renderDisqus();\n  }\n\n  render() {\n    let { id, title, path, ...other } = this.props;\n\n    if (process.env.BROWSER) {\n      window.disqus_shortname = SHORTNAME;\n      window.disqus_identifier = id;\n      window.disqus_title = title;\n      window.disqus_url = WEBSITE_URL + path;\n    }\n\n    return <div {...other} id=\"disqus_thread\" />;\n  }\n}\n\nexport default DisqusThread;"]},"metadata":{},"sourceType":"module"}